let currentMode = 'basic';
let history = [];
const API_KEY = '7b46c9d6348fe49e3acccd34'; // Your provided API key

function toggleSidebar() {
    document.getElementById('sidebar').classList.toggle('collapsed');
    document.querySelector('.main-content').classList.toggle('collapsed');
}

function toggleTheme() {
    document.body.classList.toggle('dark-mode');
}

function switchMode(mode) {
    currentMode = mode;
    document.querySelectorAll('.calculator-section').forEach(section => {
        section.style.display = section.id === ${mode}-section ? 'block' : 'none';
    });
    clearDisplay();
}

function appendToDisplay(value) {
    document.getElementById('result').value += value;
}

function clearDisplay() {
    document.getElementById('result').value = '';
}

function clearAll() {
    document.getElementById('result').value = '';
    document.getElementById('history').innerText = '';
    history = [];
}

function exportHistory() {
    const { jsPDF } = window.jspdf;
    const doc = new jsPDF();
    doc.setFontSize(12);
    doc.text('Raja Unnat Calculator History', 10, 10);
    doc.text(history.join('\n'), 10, 20);
    doc.save('calculator_history.pdf');
}

function calculate() {
    try {
        const expression = document.getElementById('result').value;
        const result = eval(expression); // Replace with math.js in production
        if (isNaN(result) || !isFinite(result)) {
            throw new Error('Invalid calculation');
        }
        document.getElementById('result').value = result;
        history.push(${expression} = ${result});
        document.getElementById('history').innerText = history.join('\n');
    } catch (error) {
        document.getElementById('result').value = 'Error: Invalid calculation';
    }
}

async function convertCurrency() {
    const amount = parseFloat(document.getElementById('currency-amount').value);
    const fromUnit = document.getElementById('currency-from-unit').value;
    const toUnit = document.getElementById('currency-to-unit').value;
    
    if (isNaN(amount) || amount < 0) {
        document.getElementById('result').value = 'Please enter a valid amount';
        return;
    }
    
    try {
        const response = await fetch(https://v6.exchangerate-api.com/v6/${API_KEY}/latest/${fromUnit});
        const data = await response.json();
        if (data.result !== 'success') {
            throw new Error('API Error');
        }
        const rate = data.conversion_rates[toUnit];
        const result = (amount * rate).toFixed(2);
        document.getElementById('result').value = ${result} ${toUnit};
        history.push(${amount} ${fromUnit} = ${result} ${toUnit});
        document.getElementById('history').innerText = history.join('\n');
    } catch (error) {
        document.getElementById('result').value = 'Error: Unable to fetch rates';
    }
}

function convertLength() {
    const amount = parseFloat(document.getElementById('length-amount').value);
    const fromUnit = document.getElementById('length-from-unit').value;
    const toUnit = document.getElementById('length-to-unit').value;
    
    const conversions = {
        m: 1,
        km: 1000,
        cm: 0.01,
        mm: 0.001,
        mi: 1609.34,
        ft: 0.3048,
        in: 0.0254
    };
    
    if (isNaN(amount) || amount < 0) {
        document.getElementById('result').value = 'Please enter a valid length';
        return;
    }
    
    const result = (amount * conversions[fromUnit] / conversions[toUnit]).toFixed(4);
    document.getElementById('result').value = ${result} ${toUnit};
    history.push(${amount} ${fromUnit} = ${result} ${toUnit});
    document.getElementById('history').innerText = history.join('\n');
}

function convertArea() {
    const amount = parseFloat(document.getElementById('area-amount').value);
    const fromUnit = document.getElementById('area-from-unit').value;
    const toUnit = document.getElementById('area-to-unit').value;
    
    const conversions = {
        sqm: 1,
        sqkm: 1e6,
        sqft: 0.092903,
        sqin: 0.00064516,
        acre: 4046.86
    };
    
    if (isNaN(amount) || amount < 0) {
        document.getElementById('result').value = 'Please enter a valid area';
        return;
    }
    
    const result = (amount * conversions[fromUnit] / conversions[toUnit]).toFixed(4);
    document.getElementById('result').value = ${result} ${toUnit};
    history.push(${amount} ${fromUnit} = ${result} ${toUnit});
    document.getElementById('history').innerText = history.join('\n');
}

function convertVolume() {
    const amount = parseFloat(document.getElementById('volume-amount').value);
    const fromUnit = document.getElementById('volume-from-unit').value;
    const toUnit = document.getElementById('volume-to-unit').value;
    
    const conversions = {
        l: 1,
        ml: 0.001,
        m3: 1000,
        gal: 3.78541,
        ft3: 28.3168
    };
    
    if (isNaN(amount) || amount < 0) {
        document.getElementById('result').value = 'Please enter a valid volume';
        return;
    }
    
    const result = (amount * conversions[fromUnit] / conversions[toUnit]).toFixed(4);
    document.getElementById('result').value = ${result} ${toUnit};
    history.push(${amount} ${fromUnit} = ${result} ${toUnit});
    document.getElementById('history').innerText = history.join('\n');
}

function convertSpeed() {
    const amount = parseFloat(document.getElementById('speed-amount').value);
    const fromUnit = document.getElementById('speed-from-unit').value;
    const toUnit = document.getElementById('speed-to-unit').value;
    
    const conversions = {
        mps: 1,
        kmph: 0.277778,
        mph: 0.44704,
        knot: 0.514444
    };
    
    if (isNaN(amount) || amount < 0) {
        document.getElementById('result').value = 'Please enter a valid speed';
        return;
    }
    
    const result = (amount * conversions[fromUnit] / conversions[toUnit]).toFixed(4);
    document.getElementById('result').value = ${result} ${toUnit};
    history.push(${amount} ${fromUnit} = ${result} ${toUnit});
    document.getElementById('history').innerText = history.join('\n');
}

function convertTime() {
    const amount = parseFloat(document.getElementById('time-amount').value);
    const fromUnit = document.getElementById('time-from-unit').value;
    const toUnit = document.getElementById('time-to-unit').value;
    
    const conversions = {
        s: 1,
        min: 60,
        hr: 3600,
        day: 86400
    };
    
    if (isNaN(amount) || amount < 0) {
        document.getElementById('result').value = 'Please enter a valid time';
        return;
    }
    
    const result = (amount * conversions[fromUnit] / conversions[toUnit]).toFixed(4);
    document.getElementById('result').value = ${result} ${toUnit};
    history.push(${amount} ${fromUnit} = ${result} ${toUnit});
    document.getElementById('history').innerText = history.join('\n');
}

function convertWeight() {
    const amount = parseFloat(document.getElementById('weight-amount').value);
    const fromUnit = document.getElementById('weight-from-unit').value;
    const toUnit = document.getElementById('weight-to-unit').value;
    
    const conversions = {
        kg: 1,
        g: 0.001,
        lb: 0.453592,
        oz: 0.0283495
    };
    
    if (isNaN(amount) || amount < 0) {
        document.getElementById('result').value = 'Please enter a valid weight';
        return;
    }
    
    const result = (amount * conversions[fromUnit] / conversions[toUnit]).toFixed(4);
    document.getElementById('result').value = ${result} ${toUnit};
    history.push(${amount} ${fromUnit} = ${result} ${toUnit});
    document.getElementById('history').innerText = history.join('\n');
}

function convertTemperature() {
    const amount = parseFloat(document.getElementById('temperature-amount').value);
    const fromUnit = document.getElementById('temperature-from-unit').value;
    const toUnit = document.getElementById('temperature-to-unit').value;
    
    let result;
    if (isNaN(amount)) {
        document.getElementById('result').value = 'Please enter a valid temperature';
        return;
    }
    
    if (fromUnit === 'c') {
        if (toUnit === 'f') result = (amount * 9/5 + 32).toFixed(2);
        else if (toUnit === 'k') result = (amount + 273.15).toFixed(2);
        else result = amount;
    } else if (fromUnit === 'f') {
        if (toUnit === 'c') result = ((amount - 32) * 5/9).toFixed(2);
        else if (toUnit === 'k') result = ((amount - 32) * 5/9 + 273.15).toFixed(2);
        else result = amount;
    } else if (fromUnit === 'k') {
        if (toUnit === 'c') result = (amount - 273.15).toFixed(2);
        else if (toUnit === 'f') result = ((amount - 273.15) * 9/5 + 32).toFixed(2);
        else result = amount;
    }
    
    document.getElementById('result').value = ${result} ${toUnit};
    history.push(${amount} ${fromUnit} = ${result} ${toUnit});
    document.getElementById('history').innerText = history.join('\n');
}

function convertAngle() {
    const amount = parseFloat(document.getElementById('angle-amount').value);
    const fromUnit = document.getElementById('angle-from-unit').value;
    const toUnit = document.getElementById('angle-to-unit').value;
    
    const conversions = {
        deg: 1,
        rad: Math.PI / 180,
        grad: 0.9
    };
    
    if (isNaN(amount) || amount < 0) {
        document.getElementById('result').value = 'Please enter a valid angle';
        return;
    }
    
    const result = (amount * conversions[fromUnit] / conversions[toUnit]).toFixed(4);
    document.getElementById('result').value = ${result} ${toUnit};
    history.push(${amount} ${fromUnit} = ${result} ${toUnit});
    document.getElementById('history').innerText = history.join('\n');
}

function convertData() {
    const amount = parseFloat(document.getElementById('data-amount').value);
    const fromUnit = document.getElementById('data-from-unit').value;
    const toUnit = document.getElementById('data-to-unit').value;
    
    const conversions = {
        b: 1,
        kb: 1024,
        mb: 1024 ** 2,
        gb: 1024 ** 3,
        tb: 1024 ** 4
    };
    
    if (isNaN(amount) || amount < 0) {
        document.getElementById('result').value = 'Please enter a valid data size';
        return;
    }
    
    const result = (amount * conversions[fromUnit] / conversions[toUnit]).toFixed(4);
    document.getElementById('result').value = ${result} ${toUnit};
    history.push(${amount} ${fromUnit} = ${result} ${toUnit});
    document.getElementById('history').innerText = history.join('\n');
}

function convertPower() {
    const amount = parseFloat(document.getElementById('power-amount').value);
    const fromUnit = document.getElementById('power-from-unit').value;
    const toUnit = document.getElementById('power-to-unit').value;
    
    const conversions = {
        w: 1,
        kw: 1000,
        hp: 745.7
    };
    
    if (isNaN(amount) || amount < 0) {
        document.getElementById('result').value = 'Please enter a valid power';
        return;
    }
    
    const result = (amount * conversions[fromUnit] / conversions[toUnit]).toFixed(4);
    document.getElementById('result').value = ${result} ${toUnit};
    history.push(${amount} ${fromUnit} = ${result} ${toUnit});
    document.getElementById('history').innerText = history.join('\n');
}

function convertEnergy() {
    const amount = parseFloat(document.getElementById('energy-amount').value);
    const fromUnit = document.getElementById('energy-from-unit').value;
    const toUnit = document.getElementById('energy-to-unit').value;
    
    const conversions = {
        j: 1,
        cal: 4.184,
        kwh: 3.6e6
    };
    
    if (isNaN(amount) || amount < 0) {
        document.getElementById('result').value = 'Please enter a valid energy';
        return;
    }
    
    const result = (amount * conversions[fromUnit] / conversions[toUnit]).toFixed(4);
    document.getElementById('result').value = ${result} ${toUnit};
    history.push(${amount} ${fromUnit} = ${result} ${toUnit});
    document.getElementById('history').innerText = history.join('\n');
}

function convertPressure() {
    const amount = parseFloat(document.getElementById('pressure-amount').value);
    const fromUnit = document.getElementById('pressure-from-unit').value;
    const toUnit = document.getElementById('pressure-to-unit').value;
    
    const conversions = {
        pa: 1,
        bar: 1e5,
        psi: 6894.76
    };
    
    if (isNaN(amount) || amount < 0) {
        document.getElementById('result').value = 'Please enter a valid pressure';
        return;
    }
    
    const result = (amount * conversions[fromUnit] / conversions[toUnit]).toFixed(4);
    document.getElementById('result').value = ${result} ${toUnit};
    history.push(${amount} ${fromUnit} = ${result} ${toUnit});
    document.getElementById('history').innerText = history.join('\n');
}

function convertFrequency() {
    const amount = parseFloat(document.getElementById('frequency-amount').value);
    const fromUnit = document.getElementById('frequency-from-unit').value;
    const toUnit = document.getElementById('frequency-to-unit').value;
    
    const conversions = {
        hz: 1,
        khz: 1e3,
        mhz: 1e6
    };
    
    if (isNaN(amount) || amount < 0) {
        document.getElementById('result').value = 'Please enter a valid frequency';
        return;
    }
    
    const result = (amount * conversions[fromUnit] / conversions[toUnit]).toFixed(4);
    document.getElementById('result').value = ${result} ${toUnit};
    history.push(${amount} ${fromUnit} = ${result} ${toUnit});
    document.getElementById('history').innerText = history.join('\n');
}

function convertDataRate() {
    const amount = parseFloat(document.getElementById('data-rate-amount').value);
    const fromUnit = document.getElementById('data-rate-from-unit').value;
    const toUnit = document.getElementById('data-rate-to-unit').value;
    
    const conversions = {
        bps: 1,
        mbps: 1e6,
        gbps: 1e9
    };
    
    if (isNaN(amount) || amount < 0) {
        document.getElementById('result').value = 'Please enter a valid data rate';
        return;
    }
    
    const result = (amount * conversions[fromUnit] / conversions[toUnit]).toFixed(4);
    document.getElementById('result').value = ${result} ${toUnit};
    history.push(${amount} ${fromUnit} = ${result} ${toUnit});
    document.getElementById('history').innerText = history.join('\n');
}

function calculateROI() {
    const initial = parseFloat(document.getElementById('initial-investment').value);
    const final = parseFloat(document.getElementById('final-value').value);
    
    if (isNaN(initial) || isNaN(final) || initial === 0) {
        document.getElementById('result').value = 'Please enter valid values';
        return;
    }
    
    const roi = ((final - initial) / initial * 100).toFixed(2);
    document.getElementById('result').value = ${roi}%;
    history.push(ROI: ${roi}%);
    document.getElementById('history').innerText = history.join('\n');
}

function calculatePercentChange() {
    const initial = parseFloat(document.getElementById('initial-value').value);
    const final = parseFloat(document.getElementById('final-value').value);
    
    if (isNaN(initial) || isNaN(final) || initial === 0) {
        document.getElementById('result').value = 'Please enter valid values';
        return;
    }
    
    const change = ((final - initial) / initial * 100).toFixed(2);
    document.getElementById('result').value = ${change}%;
    history.push(Percentage Change: ${change}%);
    document.getElementById('history').innerText = history.join('\n');
}

function calculateCompoundInterest() {
    const principal = parseFloat(document.getElementById('compound-principal').value);
    const rate = parseFloat(document.getElementById('compound-rate').value) / 100;
    const time = parseFloat(document.getElementById('compound-time').value);
    const frequency = parseFloat(document.getElementById('compound-frequency').value);
    
    if (isNaN(principal) || isNaN(rate) || isNaN(time) || isNaN(frequency) || principal < 0 || time < 0) {
        document.getElementById('result').value = 'Please enter valid values';
        return;
    }
    
    const amount = principal * Math.pow(1 + rate / frequency, frequency * time);
    const interest = (amount - principal).toFixed(2);
    document.getElementById('result').value = Interest: ${interest}, Total: ${amount.toFixed(2)};
    history.push(Compound Interest: ${interest}, Total: ${amount.toFixed(2)});
    document.getElementById('history').innerText = history.join('\n');
}

function calculateAmortization() {
    const principal = parseFloat(document.getElementById('amortization-principal').value);
    const rate = parseFloat(document.getElementById('amortization-rate').value) / 1200; // Monthly rate
    const tenure = parseFloat(document.getElementById('amortization-tenure').value);
    
    if (isNaN(principal) || isNaN(rate) || isNaN(tenure) || tenure <= 0) {
        document.getElementById('result').value = 'Please enter valid values';
        return;
    }
    
    const monthlyPayment = (principal * rate * Math.pow(1 + rate, tenure)) / (Math.pow(1 + rate, tenure) - 1);
    document.getElementById('result').value = Monthly Payment: ${monthlyPayment.toFixed(2)};
    history.push(Amortization - Monthly Payment: ${monthlyPayment.toFixed(2)});
    document.getElementById('history').innerText = history.join('\n');
}

function calculateBMI() {
    const weight = parseFloat(document.getElementById('bmi-weight').value);
    const height = parseFloat(document.getElementById('bmi-height').value);
    if (isNaN(weight) || isNaN(height) || height <= 0) {
        document.getElementById('result').value = 'Please enter valid weight and height';
        return;
    }
    const bmi = (weight / (height * height)).toFixed(2);
    document.getElementById('result').value = BMI: ${bmi};
    history.push(BMI: ${bmi});
    document.getElementById('history').innerText = history.join('\n');
}

function calculatePercentage() {
    const value = parseFloat(document.getElementById('percent-value').value);
    const total = parseFloat(document.getElementById('percent-total').value);
    if (isNaN(value) || isNaN(total) || total === 0) {
        document.getElementById('result').value = 'Please enter valid values';
        return;
    }
    const percentage = (value / total * 100).toFixed(2);
    document.getElementById('result').value = ${percentage}%;
    history.push(Percentage: ${percentage}%);
    document.getElementById('history').innerText = history.join('\n');
}

function calculateEMI() {
    const principal = parseFloat(document.getElementById('emi-principal').value);
    const rate = parseFloat(document.getElementById('emi-rate').value) / 1200; // Monthly rate
    const tenure = parseFloat(document.getElementById('emi-tenure').value);
    if (isNaN(principal) || isNaN(rate) || isNaN(tenure) || tenure <= 0) {
        document.getElementById('result').value = 'Please enter valid values';
        return;
    }
    const emi = (principal * rate * Math.pow(1 + rate, tenure)) / (Math.pow(1 + rate, tenure) - 1);
    document.getElementById('result').value = EMI: ${emi.toFixed(2)};
    history.push(EMI: ${emi.toFixed(2)});
    document.getElementById('history').innerText = history.join('\n');
}

function calculateTax() {
    const amount = parseFloat(document.getElementById('tax-amount').value);
    const rate = parseFloat(document.getElementById('tax-rate').value);
    if (isNaN(amount) || isNaN(rate) || amount < 0 || rate < 0) {
        document.getElementById('result').value = 'Please enter valid values';
        return;
    }
    const tax = (amount * rate / 100).toFixed(2);
    document.getElementById('result').v
