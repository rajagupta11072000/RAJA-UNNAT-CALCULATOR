* {
  box-sizing: border-box;
  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
}
body, html {
  margin: 0; padding: 0; height: 100vh;
  display: flex; overflow: hidden;
  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
  color: #222;
}
#sidebar {
  background: #2c2c54;
  min-width: 260px;
  max-width: 280px;
  display: flex;
  flex-direction: column;
  padding-top: 2rem;
  border-right: 3px solid #9c88ff;
  color: white;
  overflow-y: auto;
}
#sidebar h2 {
  margin-left: 20px;
  font-weight: 700;
  font-size: 1.5rem;
  margin-bottom: 1.5rem;
  user-select: none;
}
#sidebar ul {
  list-style: none;
  padding: 0;
  margin: 0 10px;
  display: flex;
  flex-direction: column;
  gap: 0.7rem;
}
#sidebar ul li {
  width: 100%;
}
#sidebar ul li button {
  background: transparent;
  border: none;
  padding: 12px 16px;
  width: 100%;
  text-align: left;
  font-size: 1.1rem;
  border-radius: 6px;
  cursor: pointer;
  color: white;
  user-select: none;
  transition: background 0.3s, color 0.3s;
  display: flex;
  align-items: center;
  gap: 8px;
}
#sidebar ul li button.active, #sidebar ul li button:hover {
  background: #9c88ff;
  color: #2c2c54;
  font-weight: 700;
}
#content {
  flex-grow: 1;
  padding: 25px 30px;
  background: white;
  border-radius: 0 12px 12px 0;
  overflow-y: auto;
  display: flex;
  flex-direction: column;
  user-select: none;
}
#content h1 {
  font-size: 1.9rem;
  margin-bottom: 25px;
  color: #764ba2;
  user-select: none;
}
.tab-pane {
  display: none;
}
.tab-pane.active {
  display: block;
}
label {
  display: block;
  margin-bottom: 8px;
  font-weight: 600;
  font-size: 1.1rem;
}
input, select {
  width: 100%;
  padding: 9px 12px;
  margin-bottom: 18px;
  font-size: 1.1rem;
  border-radius: 8px;
  border: 1.8px solid #ccc;
  transition: border-color 0.3s;
  outline: none;
}
input:focus, select:focus {
  border-color: #764ba2;
  box-shadow: 0 0 8px #a085f9;
}
button.calc-btn {
  font-weight: 800;
  padding: 14px 0;
  border-radius: 12px;
  border: none;
  width: 100%;
  font-size: 1.3rem;
  cursor: pointer;
  background: linear-gradient(45deg, #764ba2, #9c88ff);
  color: white;
  user-select: none;
  margin-bottom: 14px;
  box-shadow: 0 4px 8px #a085f9aa;
  transition: background 0.3s ease;
}
button.calc-btn:hover {
  background: linear-gradient(45deg, #573a82, #7a5fc5);
}
#output {
  font-size: 1.3rem;
  font-weight: 700;
  min-height: 56px;
  background: #f5f5f5;
  border-radius: 12px;
  padding: 14px 18px;
  color: #333;
  box-shadow: inset 0 0 8px #ccc;
  user-select: text;
}
.calc-grid {
  display: grid;
  grid-template-columns: repeat(4, 1fr);
  gap: 14px;
  max-width: 360px;
  user-select: none;
  margin-bottom: 24px;
}
.calc-grid button {
  padding: 16px 0;
  font-size: 1.2rem;
  border-radius: 12px;
  border: none;
  cursor: pointer;
  font-weight: 700;
  background: linear-gradient(45deg,#764ba2,#9e90f7);
  color: white;
  box-shadow: 0 4px 8px #a085f9aa;
  transition: all 0.15s ease;
}
.calc-grid button:hover {
  filter: brightness(1.15);
  transform: scale(1.05);
  box-shadow: 0 6px 12px #886fcc;
}
.calc-grid button.operator-btn {
  background: linear-gradient(45deg, #d64545, #ff6c6c);
}
.calc-grid button.clear-btn {
  background: linear-gradient(45deg, #7a2a2a, #f52727);
}
.calc-grid button.equal-btn {
  grid-column: span 4;
  background: linear-gradient(45deg, #42b983, #67d68d);
}
@media(max-width:720px) {
  #sidebar {
    width: 100%;
    max-width: none;
    border-right: none;
    border-bottom: 3px solid #9c88ff;
    flex-direction: row;
    overflow-x: auto;
    padding: 1rem 0;
  }
  #sidebar h2 {
    display: none;
  }
  #sidebar ul {
    flex-direction: row;
    gap: 12px;
    margin: 0 15px;
  }
  #sidebar ul li {
    min-width: 90px;
  }
  #sidebar ul li button {
    border-left: none;
    text-align: center;
    border-radius: 10px;
    font-size: 1rem;
    padding: 12px 10px;
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 6px;
  }
  #sidebar ul li button span {
    font-size: 0.9rem;
  }
  #main-content {
    height: 55vh;
    border-radius: 0;
    padding: 22px 14px;
    overflow-y: auto;
  }
  .calc-grid {
    max-width: 100%;
  }
}
    document.getElementById('result').value = ${result} ${toUnit};
    history.push(${amount} ${fromUnit} = ${result} ${toUnit});
    document.getElementById('history').innerText = history.join('\n');
}

function convertArea() {
    const amount = parseFloat(document.getElementById('area-amount').value);
    const fromUnit = document.getElementById('area-from-unit').value;
    const toUnit = document.getElementById('area-to-unit').value;
    
    const conversions = {
        sqm: 1,
        sqkm: 1e6,
        sqft: 0.092903,
        sqin: 0.00064516,
        acre: 4046.86
    };
    
    if (isNaN(amount) || amount < 0) {
        document.getElementById('result').value = 'Please enter a valid area';
        return;
    }
    
    const result = (amount * conversions[fromUnit] / conversions[toUnit]).toFixed(4);
    document.getElementById('result').value = ${result} ${toUnit};
    history.push(${amount} ${fromUnit} = ${result} ${toUnit});
    document.getElementById('history').innerText = history.join('\n');
}

function convertVolume() {
    const amount = parseFloat(document.getElementById('volume-amount').value);
    const fromUnit = document.getElementById('volume-from-unit').value;
    const toUnit = document.getElementById('volume-to-unit').value;
    
    const conversions = {
        l: 1,
        ml: 0.001,
        m3: 1000,
        gal: 3.78541,
        ft3: 28.3168
    };
    
    if (isNaN(amount) || amount < 0) {
        document.getElementById('result').value = 'Please enter a valid volume';
        return;
    }
    
    const result = (amount * conversions[fromUnit] / conversions[toUnit]).toFixed(4);
    document.getElementById('result').value = ${result} ${toUnit};
    history.push(${amount} ${fromUnit} = ${result} ${toUnit});
    document.getElementById('history').innerText = history.join('\n');
}

function convertSpeed() {
    const amount = parseFloat(document.getElementById('speed-amount').value);
    const fromUnit = document.getElementById('speed-from-unit').value;
    const toUnit = document.getElementById('speed-to-unit').value;
    
    const conversions = {
        mps: 1,
        kmph: 0.277778,
        mph: 0.44704,
        knot: 0.514444
    };
    
    if (isNaN(amount) || amount < 0) {
        document.getElementById('result').value = 'Please enter a valid speed';
        return;
    }
    
    const result = (amount * conversions[fromUnit] / conversions[toUnit]).toFixed(4);
    document.getElementById('result').value = ${result} ${toUnit};
    history.push(${amount} ${fromUnit} = ${result} ${toUnit});
    document.getElementById('history').innerText = history.join('\n');
}

function convertTime() {
    const amount = parseFloat(document.getElementById('time-amount').value);
    const fromUnit = document.getElementById('time-from-unit').value;
    const toUnit = document.getElementById('time-to-unit').value;
    
    const conversions = {
        s: 1,
        min: 60,
        hr: 3600,
        day: 86400
    };
    
    if (isNaN(amount) || amount < 0) {
        document.getElementById('result').value = 'Please enter a valid time';
        return;
    }
    
    const result = (amount * conversions[fromUnit] / conversions[toUnit]).toFixed(4);
    document.getElementById('result').value = ${result} ${toUnit};
    history.push(${amount} ${fromUnit} = ${result} ${toUnit});
    document.getElementById('history').innerText = history.join('\n');
}

function convertWeight() {
    const amount = parseFloat(document.getElementById('weight-amount').value);
    const fromUnit = document.getElementById('weight-from-unit').value;
    const toUnit = document.getElementById('weight-to-unit').value;
    
    const conversions = {
        kg: 1,
        g: 0.001,
        lb: 0.453592,
        oz: 0.0283495
    };
    
    if (isNaN(amount) || amount < 0) {
        document.getElementById('result').value = 'Please enter a valid weight';
        return;
    }
    
    const result = (amount * conversions[fromUnit] / conversions[toUnit]).toFixed(4);
    document.getElementById('result').value = ${result} ${toUnit};
    history.push(${amount} ${fromUnit} = ${result} ${toUnit});
    document.getElementById('history').innerText = history.join('\n');
}

function convertTemperature() {
    const amount = parseFloat(document.getElementById('temperature-amount').value);
    const fromUnit = document.getElementById('temperature-from-unit').value;
    const toUnit = document.getElementById('temperature-to-unit').value;
    
    let result;
    if (isNaN(amount)) {
        document.getElementById('result').value = 'Please enter a valid temperature';
        return;
    }
    
    if (fromUnit === 'c') {
        if (toUnit === 'f') result = (amount * 9/5 + 32).toFixed(2);
        else if (toUnit === 'k') result = (amount + 273.15).toFixed(2);
        else result = amount;
    } else if (fromUnit === 'f') {
        if (toUnit === 'c') result = ((amount - 32) * 5/9).toFixed(2);
        else if (toUnit === 'k') result = ((amount - 32) * 5/9 + 273.15).toFixed(2);
        else result = amount;
    } else if (fromUnit === 'k') {
        if (toUnit === 'c') result = (amount - 273.15).toFixed(2);
        else if (toUnit === 'f') result = ((amount - 273.15) * 9/5 + 32).toFixed(2);
        else result = amount;
    }
    
    document.getElementById('result').value = ${result} ${toUnit};
    history.push(${amount} ${fromUnit} = ${result} ${toUnit});
    document.getElementById('history').innerText = history.join('\n');
}

function convertAngle() {
    const amount = parseFloat(document.getElementById('angle-amount').value);
    const fromUnit = document.getElementById('angle-from-unit').value;
    const toUnit = document.getElementById('angle-to-unit').value;
    
    const conversions = {
        deg: 1,
        rad: Math.PI / 180,
        grad: 0.9
    };
    
    if (isNaN(amount) || amount < 0) {
        document.getElementById('result').value = 'Please enter a valid angle';
        return;
    }
    
    const result = (amount * conversions[fromUnit] / conversions[toUnit]).toFixed(4);
    document.getElementById('result').value = ${result} ${toUnit};
    history.push(${amount} ${fromUnit} = ${result} ${toUnit});
    document.getElementById('history').innerText = history.join('\n');
}

function convertData() {
    const amount = parseFloat(document.getElementById('data-amount').value);
    const fromUnit = document.getElementById('data-from-unit').value;
    const toUnit = document.getElementById('data-to-unit').value;
    
    const conversions = {
        b: 1,
        kb: 1024,
        mb: 1024 ** 2,
        gb: 1024 ** 3,
        tb: 1024 ** 4
    };
    
    if (isNaN(amount) || amount < 0) {
        document.getElementById('result').value = 'Please enter a valid data size';
        return;
    }
    
    const result = (amount * conversions[fromUnit] / conversions[toUnit]).toFixed(4);
    document.getElementById('result').value = ${result} ${toUnit};
    history.push(${amount} ${fromUnit} = ${result} ${toUnit});
    document.getElementById('history').innerText = history.join('\n');
}

function convertPower() {
    const amount = parseFloat(document.getElementById('power-amount').value);
    const fromUnit = document.getElementById('power-from-unit').value;
    const toUnit = document.getElementById('power-to-unit').value;
    
    const conversions = {
        w: 1,
        kw: 1000,
        hp: 745.7
    };
    
    if (isNaN(amount) || amount < 0) {
        document.getElementById('result').value = 'Please enter a valid power';
        return;
    }
    
    const result = (amount * conversions[fromUnit] / conversions[toUnit]).toFixed(4);
    document.getElementById('result').value = ${result} ${toUnit};
    history.push(${amount} ${fromUnit} = ${result} ${toUnit});
    document.getElementById('history').innerText = history.join('\n');
}

function convertEnergy() {
    const amount = parseFloat(document.getElementById('energy-amount').value);
    const fromUnit = document.getElementById('energy-from-unit').value;
    const toUnit = document.getElementById('energy-to-unit').value;
    
    const conversions = {
        j: 1,
        cal: 4.184,
        kwh: 3.6e6
    };
    
    if (isNaN(amount) || amount < 0) {
        document.getElementById('result').value = 'Please enter a valid energy';
        return;
    }
    
    const result = (amount * conversions[fromUnit] / conversions[toUnit]).toFixed(4);
    document.getElementById('result').value = ${result} ${toUnit};
    history.push(${amount} ${fromUnit} = ${result} ${toUnit});
    document.getElementById('history').innerText = history.join('\n');
}

function convertPressure() {
    const amount = parseFloat(document.getElementById('pressure-amount').value);
    const fromUnit = document.getElementById('pressure-from-unit').value;
    const toUnit = document.getElementById('pressure-to-unit').value;
    
    const conversions = {
        pa: 1,
        bar: 1e5,
        psi: 6894.76
    };
    
    if (isNaN(amount) || amount < 0) {
        document.getElementById('result').value = 'Please enter a valid pressure';
        return;
    }
    
    const result = (amount * conversions[fromUnit] / conversions[toUnit]).toFixed(4);
    document.getElementById('result').value = ${result} ${toUnit};
    history.push(${amount} ${fromUnit} = ${result} ${toUnit});
    document.getElementById('history').innerText = history.join('\n');
}

function convertFrequency() {
    const amount = parseFloat(document.getElementById('frequency-amount').value);
    const fromUnit = document.getElementById('frequency-from-unit').value;
    const toUnit = document.getElementById('frequency-to-unit').value;
    
    const conversions = {
        hz: 1,
        khz: 1e3,
        mhz: 1e6
    };
    
    if (isNaN(amount) || amount < 0) {
        document.getElementById('result').value = 'Please enter a valid frequency';
        return;
    }
    
    const result = (amount * conversions[fromUnit] / conversions[toUnit]).toFixed(4);
    document.getElementById('result').value = ${result} ${toUnit};
    history.push(${amount} ${fromUnit} = ${result} ${toUnit});
    document.getElementById('history').innerText = history.join('\n');
}

function convertDataRate() {
    const amount = parseFloat(document.getElementById('data-rate-amount').value);
    const fromUnit = document.getElementById('data-rate-from-unit').value;
    const toUnit = document.getElementById('data-rate-to-unit').value;
    
    const conversions = {
        bps: 1,
        mbps: 1e6,
        gbps: 1e9
    };
    
    if (isNaN(amount) || amount < 0) {
        document.getElementById('result').value = 'Please enter a valid data rate';
        return;
    }
    
    const result = (amount * conversions[fromUnit] / conversions[toUnit]).toFixed(4);
    document.getElementById('result').value = ${result} ${toUnit};
    history.push(${amount} ${fromUnit} = ${result} ${toUnit});
    document.getElementById('history').innerText = history.join('\n');
}

function calculateROI() {
    const initial = parseFloat(document.getElementById('initial-investment').value);
    const final = parseFloat(document.getElementById('final-value').value);
    
    if (isNaN(initial) || isNaN(final) || initial === 0) {
        document.getElementById('result').value = 'Please enter valid values';
        return;
    }
    
    const roi = ((final - initial) / initial * 100).toFixed(2);
    document.getElementById('result').value = ${roi}%;
    history.push(ROI: ${roi}%);
    document.getElementById('history').innerText = history.join('\n');
}

function calculatePercentChange() {
    const initial = parseFloat(document.getElementById('initial-value').value);
    const final = parseFloat(document.getElementById('final-value').value);
    
    if (isNaN(initial) || isNaN(final) || initial === 0) {
        document.getElementById('result').value = 'Please enter valid values';
        return;
    }
    
    const change = ((final - initial) / initial * 100).toFixed(2);
    document.getElementById('result').value = ${change}%;
    history.push(Percentage Change: ${change}%);
    document.getElementById('history').innerText = history.join('\n');
}

function calculateCompoundInterest() {
    const principal = parseFloat(document.getElementById('compound-principal').value);
    const rate = parseFloat(document.getElementById('compound-rate').value) / 100;
    const time = parseFloat(document.getElementById('compound-time').value);
    const frequency = parseFloat(document.getElementById('compound-frequency').value);
    
    if (isNaN(principal) || isNaN(rate) || isNaN(time) || isNaN(frequency) || principal < 0 || time < 0) {
        document.getElementById('result').value = 'Please enter valid values';
        return;
    }
    
    const amount = principal * Math.pow(1 + rate / frequency, frequency * time);
    const interest = (amount - principal).toFixed(2);
    document.getElementById('result').value = Interest: ${interest}, Total: ${amount.toFixed(2)};
    history.push(Compound Interest: ${interest}, Total: ${amount.toFixed(2)});
    document.getElementById('history').innerText = history.join('\n');
}

function calculateAmortization() {
    const principal = parseFloat(document.getElementById('amortization-principal').value);
    const rate = parseFloat(document.getElementById('amortization-rate').value) / 1200; // Monthly rate
    const tenure = parseFloat(document.getElementById('amortization-tenure').value);
    
    if (isNaN(principal) || isNaN(rate) || isNaN(tenure) || tenure <= 0) {
        document.getElementById('result').value = 'Please enter valid values';
        return;
    }
    
    const monthlyPayment = (principal * rate * Math.pow(1 + rate, tenure)) / (Math.pow(1 + rate, tenure) - 1);
    document.getElementById('result').value = Monthly Payment: ${monthlyPayment.toFixed(2)};
    history.push(Amortization - Monthly Payment: ${monthlyPayment.toFixed(2)});
    document.getElementById('history').innerText = history.join('\n');
}

function calculateBMI() {
    const weight = parseFloat(document.getElementById('bmi-weight').value);
    const height = parseFloat(document.getElementById('bmi-height').value);
    if (isNaN(weight) || isNaN(height) || height <= 0) {
        document.getElementById('result').value = 'Please enter valid weight and height';
        return;
    }
    const bmi = (weight / (height * height)).toFixed(2);
    document.getElementById('result').value = BMI: ${bmi};
    history.push(BMI: ${bmi});
    document.getElementById('history').innerText = history.join('\n');
}

function calculatePercentage() {
    const value = parseFloat(document.getElementById('percent-value').value);
    const total = parseFloat(document.getElementById('percent-total').value);
    if (isNaN(value) || isNaN(total) || total === 0) {
        document.getElementById('result').value = 'Please enter valid values';
        return;
    }
    const percentage = (value / total * 100).toFixed(2);
    document.getElementById('result').value = ${percentage}%;
    history.push(Percentage: ${percentage}%);
    document.getElementById('history').innerText = history.join('\n');
}

function calculateEMI() {
    const principal = parseFloat(document.getElementById('emi-principal').value);
    const rate = parseFloat(document.getElementById('emi-rate').value) / 1200; // Monthly rate
    const tenure = parseFloat(document.getElementById('emi-tenure').value);
    if (isNaN(principal) || isNaN(rate) || isNaN(tenure) || tenure <= 0) {
        document.getElementById('result').value = 'Please enter valid values';
        return;
    }
    const emi = (principal * rate * Math.pow(1 + rate, tenure)) / (Math.pow(1 + rate, tenure) - 1);
    document.getElementById('result').value = EMI: ${emi.toFixed(2)};
    history.push(EMI: ${emi.toFixed(2)});
    document.getElementById('history').innerText = history.join('\n');
}

function calculateTax() {
    const amount = parseFloat(document.getElementById('tax-amount').value);
    const rate = parseFloat(document.getElementById('tax-rate').value);
    if (isNaN(amount) || isNaN(rate) || amount < 0 || rate < 0) {
        document.getElementById('result').value = 'Please enter valid values';
        return;
    }
    const tax = (amount * rate / 100).toFixed(2);
    document.getElementById('result').v
